install.packages("swirl")
install.packages("slidify")
install.packages("ggplot2")
install.packages("devtools")
install.packages("KernSmooth")
library(KernSmooth)
q()
library(devtools)
find_rtools()
getwd()
install.packages("swirl")
library(Swirl)
library(swirl)
swirl
install_from_swirl("R Programming")
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z, 555,z)
z*2+100
my_sqrt<-sqrt(z-1)
z
my_sqrt
my_div<-z/mysqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
dir()
?list.files
args(list.files)
old.dir<-getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
setwd("testdir")
list.files()
file.exists("mytest.R"
)
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R"
)
file.path("folder1","folder2")
?dir.create
play()
nxt()
die.create(file.path("testdir2","testdir3"),recursive = FALSEdie.create(file.path("testdir2","testdir3"),recursive = FALSE
play()
dir.create(file.path("testdir2","testdir3"),recursive = FALSE)
die()
dir()
dir.create(file.path("testdir2","testdir3"),recursive = TRUE)
dir()
cd testdir2
cd /testdir2
nxt()
dir.create(file.path("testdir2","testdir3"),recursive = TRUE)
unlink("testdir2",TRUE)
setwd(old.dir)
unlink("testdir",TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq<-seq(5,10,length=30)
my_seq
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_Seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(1,2,3),times=10)
rep(c(0,1,2),times=10)
rep(c(0,1,2) each=10)
rep(c(0,1,2), each=10)
num_vect<-c(0.5,55,-10,6)
tf<num_vect<1
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char, collapse=" ")
c(my_char,"Jon")
my_name<-c(my_char,"Jon")
my_name
paste(my_name,collapse=" ")
paste(hello","world", sep=" ")
paste("hello","world", sep=" ")
paste("Hello","world", sep=" ")
paste("Hello","world",sep=" ")
info()
paste("Hello", "world!", sep = " ")
paste(c(1:3),c("X","Y","Z"),sep"")
paste(c(1:3),c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
exit
quit
bye
bye()
quit()
library(Swirl)
library(swirl)
ls()
swirl()
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[300]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attribute(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)<-cnames
my_data
bye()
q()
cube<- function(x,n) {
x^3
}
cube(3)
x<-1:10
if(x>5) {
x<-0
}
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
x
x
x<-5
y<if(x<3){NA}
y<if(x<3){
NA
} else {
10
}
y<-if(x<3){
NA
} else {
10
}
x
y
clear()
setwd("C:/Data/Jon's Work/MOOCs/Data Scientist Toolbox/R/New folder")
setwd("C:/Data/Jon's Work/MOOCs/Data Scientist Toolbox/R")
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip", exdir = "diet_data")
list.files("diet_data")
andy<-read.csv("diet_data/Andy.csv")
head(andy)
lenght(andy$Day)
length(andy$Day)
dim(andy)
str(andy)
?str
summary(andy)
names(andy)
andy[1,"weight"]
andy[1,"Weight"]
andy[30,"Weight"]
subset(andy$Weight,andy$Day==30)
andy_start<-andy[1,"Weight"]
andy_end<-andy[30,"Weight"]
andy_end
andy_start
andy_loss<andy_start-andy_end
andy_loss<-andy_start-andy_end
andy_loss
list.files("diet_data")
files<-list.files("diet_data")
files
files[3:5]
head(read.csv(files[3]))
files_full<-list.files("diet_data",full.names=TRUE)
files_full
head(read.csv(files_fukk[3]))
head(read.csv(files_full[3]))
andy_david<-rbind(andy,read.csv(files_full[2]))
head(andy_david)
tail(andy_david)
for (i in 1:5){
dat<-rbind(dat,read.csv(files_full[i]))
}
dat<-data.frame()
for (i in 1:5){
dat<-rbind(dat,read.csv(files_full[i]))
}
str(dat)
median(dat$Weight)
?median
median(dat$Weight,na.rm=TRUE)
summary(files_full)
tmp(vector(mode="list",lenght=length(full_files)))
tmp<-(vector(mode="list",lenght=length(full_files)))
h
tmp<-(vector(mode="list",length=length(full_files)))
tmp<-(vector(mode="list",length=length(files_full)))
summary(tmp)
dataset_url <- "https://d396qusza40orc.cloudfront.net/rprog%2Fdata%2Fspecdata.zip"
dataset_url <- "https://d396qusza40orc.cloudfront.net/"
dataset_url <- "
https://d396qusza40orc.cloudfront.net/""
dataset_url <- ""https://d396qusza40orc.cloudfront.net/""
dataset_url <- "https://d396qusza40orc.cloudfront.net/"
download.file(dataset_url, "rprog%2Fdata%2Fspecdata.zip")
names<-1:10
names
names<-names+".csv"
names<-c(names,".csv")
names
names<-1:10
names
names_csv<-names + ".csv"
names_csv<-c(names,".csv")
names_csv<-names_csv +".csv"
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
warnings()
c("test","/","name",".csv")
names
names_full<-paste0(directory,names,".csv")
names_full<-paste0(directory,names)
direct<-"test"
names_full<-paste0(direct,names)
names_full
names_full<-paste0(direct,"/",names,".csv")
names_full
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
warnings()
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
dat
dat["weight"]
dat[,"weight"]
dat[,"Weight"]
file_names<-list.files(directory,full.names=TRUE)
file_names<-list.files("specdata",full.names=TRUE)
dat2<-data.frame()
for (i in seq_along(1:10)){
dat2<-rbind(dat2,read.csv(file_names[id[i]]))
}
ids<-1:10
for (i in seq_along(ids)){
dat2<-rbind(dat2,read.csv(file_names[ids[i]]))
}
dat2
head(dat2)
mean(dat2[,"sulfate"],na.rm=TRUE)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
testframe<-data.frame(row.names=c("id","nobs")
testframe<-data.frame(row.names=c("id","nobs")
testframe<-data.frame(row.names=c("id","nobs"))
testframe
str(testframe)
testframe<-data.frame()
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3
)
?cor
test<-1:10
test2<-test(>5)
test2<-test>5
test2
test2<-test(test>5)
test2<-test[test>5]
test2
test2<-complete("specdata", 30:25)
test2
test3<-test2[,"nobs">712]
test3
test3<-test2[,"nobs"]
test3
test3<-test2[,"nobs"][,"nobs">700]
test3<-test2[which(test2[,"nobs">711]),]
test3<-test2[which(test2[,"nobs"]>711),]
test3
test3<-test2[which(test2[,"nobs"]>711),"id"]
test3
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
cr <- corr("specdata",0)
cr <- corr("specdata",0)
View(corr)
View(corr)
View(all_files)
source("corr.R")
source("complete.R")
cr <- corr("specdata",150)
summary(cr)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata",150)
head(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
cr <- corr("specdata",5000)
summary(cr)
length(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata",5000)
length(cr)
summary(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
source("pollutantmean2.R")
source("pollutantmean2.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean2.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean2.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate")
getwd()
setwd("C:/Data/Jon's Work/MOOCs/Data Scientist Toolbox/R/Assignment2")
setwd("C:/Data/Jon's Work/MOOCs/Data Scientist Toolbox/R/Assignment2/ProgrammingAssignment2")
source('C:/Data/Jon\'s Work/MOOCs/Data Scientist Toolbox/R/Assignment2/ProgrammingAssignment2/cachematrix.R')
source('C:/Data/Jon\'s Work/MOOCs/Data Scientist Toolbox/R/Assignment2/ProgrammingAssignment2/cachematrix.R')
source('C:/Data/Jon\'s Work/MOOCs/Data Scientist Toolbox/R/Assignment2/ProgrammingAssignment2/cachematrix.R')
mat1<-matrix(1:4,nrow=2,ncol=2)
mat1
makeCacheMAtrix(mat1)
makeCacheMatrix(mat1)
test1<-makeCacheMAtrix(mat1)
test1<-makeCacheMatrix(mat1)
cacheSolve(test1)
test1
i<-test1$getinverse()
i
source('C:/Data/Jon\'s Work/MOOCs/Data Scientist Toolbox/R/Assignment2/ProgrammingAssignment2/cachematrix.R')
cacheSolve(test1)
test1$getinverse()
test1$get()
test2<-makeCacheMatrix(matrix(1:9,nrow=3,ncol=3))
test2$get()
test2$getinverse()
cacheSolve(test2)
test2$set(matrix(5:8,nrow=2,ncol=2))
cacheSolve(test2)
source('C:/Data/Jon\'s Work/MOOCs/Data Scientist Toolbox/R/Assignment2/ProgrammingAssignment2/cachematrix.R')
source('C:/Data/Jon\'s Work/MOOCs/Data Scientist Toolbox/R/Assignment2/ProgrammingAssignment2/cachematrix.R')
?solve
cacheSolve(test2)%*%test2$get
cacheSolve(test2)
test2$getinverse()%*%test2$get
test2$getinverse()
test2$getinverse()%*%test2$get()
source('C:/Data/Jon\'s Work/MOOCs/Data Scientist Toolbox/R/Assignment2/ProgrammingAssignment2/cachematrix.R')
